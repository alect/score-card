   Newgrounds is somewhat more secure than Kongregate. Connecting to the Newgrounds API is done by using a developer
-specific API ID and encryption key. After being connected, a developer has the ability to post a score to any 
scoreboard he has created through a simple "postScore" command. So the key to exploiting a Newgrounds leaderboard is
getting the creator's API Id and encryption key. Neither attributes were found on the page source as with Kongregate,
but may be present in application memory - we would use a debugger to attempt testing this, but finding a game that used
the Newgrounds scoreboard system was tough. It seems many games now use the Mochimedia system to handle gameplay stats,
which features RC4-encrypted post data and an MD5 hash. A direct exploit on Newgrounds scores through 
adversary-generated post data is not trivial.
	However, a much simpler way to falsify scores in Newgrounds games (and Flash games in general) is to use a program
like CheatEngine to directly modify the score in memory. This allows an adversary to bypass any complex encryption
system for score-posting, and demonstrates the need for a system that factors in the entirety of gameplay rather than
the end score. By attaching to the process, checking for a starting value in memory and then iteratively modifying the
score while checking for the updated value, finding the score in memory is trivial. There are some standard defenses
against this trick, such as storing an application-specific hash of the score separately and updating the hash along
with the score - on leaderboard submission, simply check if the score still hashes to the same value. Assuming the hash
can't be computed by the adversary, this works well - however, the burden of setting up this prevention is entirely on
the game developer, and from what we have observed many developers don't bother with this system. Furthermore, through a
decompiler one could discover the hash function and eliminate its security bonus entirely. 
